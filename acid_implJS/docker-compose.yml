# acid_implJS/docker-compose.yml
version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "81:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      visit-counter:
        condition: service_healthy
    networks:
      - app-net

  visit-counter:
    build: .
    deploy:
      replicas: 3
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: visitdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - ./init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d visitdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-net

  # --- NUOVI SERVIZI AGGIUNTI ---
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3002:3000" # Usiamo la porta 3002 per non andare in conflitto con l'altra istanza
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - app-net
    depends_on:
      - prometheus

  k6:
    image: grafana/k6:latest
    profiles: ["load-test"]
    depends_on:
      - nginx
    networks:
      - app-net
    volumes:
      - ./scripts:/scripts # Montiamo la cartella degli script
    command: run /scripts/k6-script.js

networks:
  app-net:
    driver: bridge